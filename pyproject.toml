[tool.poetry]
name = "blendertoolbox"
version = "0.0.5"
description = "Some Blender functions for rendering paper figures"
authors = ["Hsueh-Ti Derek Liu <hsuehtil@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/HTDerekLiu/BlenderToolbox/"
repository = "https://github.com/HTDerekLiu/BlenderToolbox/"
keywords = ["blender", "rendering", "3d", "visualization"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Multimedia :: Graphics :: 3D Rendering",
]
packages = [{include = "blendertoolbox"}]

[tool.poetry.dependencies]
python = "^3.10"
numpy = { version = "^1.24.0", optional = true }

[tool.poetry.extras]
numpy = ["numpy"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=blendertoolbox",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Tests that are slow to run",
]

[tool.coverage.run]
source = ["blendertoolbox"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"